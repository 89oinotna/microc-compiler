Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "x"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "y"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 17); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 25); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 39); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 3); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Mult,
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 3);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 4); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "a"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Assign (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccIndex (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Add,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call ("print",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "set_element";
           formals =
           [(Ast.TypI, "i"); ((Ast.TypA (Ast.TypI, None)), "a");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccIndex (
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 },
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "i"); 
                                            id = 0 });
                                       id = 0 }
                                     ));
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "n"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "b"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "set_element",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                 id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 });
                                                                  id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                  id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 10))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0); id = 0 }
                                      ));
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.AccIndex (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "a");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 4
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "leftRotate";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "d");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "d");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call (
                                                             "leftRotatebyOne",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 });
                                                                id = 0 };
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n");
                                                                    id = 0 });
                                                                 id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "leftRotatebyOne";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "temp"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "arr");
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Sub,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "n");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 });
                                         id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "temp"); 
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 7))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 6); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("leftRotate",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 2); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "reverseArray";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "start");
             (Ast.TypI, "end")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "start"); 
                                        id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "end"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "temp");
                                                   id = 0 },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "arr");
                                                             id = 0 },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "start");
                                                                  id = 0 });
                                                             id = 0 }
                                                           ));
                                                        id = 0 });
                                                   id = 0 }
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccIndex (
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "arr");
                                                              id = 0 },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Access
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccVar
                                                                    "end");
                                                                   id = 0 });
                                                              id = 0 }
                                                            ));
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "temp");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "start");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "end");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "size");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 6);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("reverseArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.BinaryOp (Ast.Sub,
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "n");
                                                id = 0 });
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 20))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "f"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "f"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "a");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "f");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "f");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Mult,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "f");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printarr",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "n"); id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "a"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printarr";
            formals = [(Ast.TypI, "len"); ((Ast.TypA (Ast.TypI, None)), "a")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "len"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccIndex (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "a");
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 }
                                                    ]
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fib"; formals = [(Ast.TypI, "x")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "x"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node = (Ast.ILiteral 2); id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 2);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 }
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("fib",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 0); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 2); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 4); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 5); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 5);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 39); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fun";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("fun",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Assign (
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 }
                                        ));
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Assign (
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "i"); id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Add,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printem";
           formals =
           [(Ast.TypI, "a"); (Ast.TypI, "b"); (Ast.TypI, "c");
             (Ast.TypI, "d")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "d"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("printem",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 17); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 192); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 8); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "gcd";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.While (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Equal,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "b"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.If (
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Greater,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 });
                                                  id = 0 }
                                                ));
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                  ]);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("gcd",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 14); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 15); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 99); 
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 121); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 6
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")); id = 0 };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "b")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printa"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printb"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "incab"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "b"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 21); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("incab", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "i")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Add,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 }
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 8); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Assign (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "p"); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Add,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccDeref
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "p");
                                                                 id = 0 });
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 });
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Return
                                             (Some { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i");
                                                          id = 0 });
                                                     id = 0 }));
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "insertionSort";
           formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 1); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Geq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Greater,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 12); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 11); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 13); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("insertionSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "x"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "y"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 17); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 25); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 39); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 3); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Mult,
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 3);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 4); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "a"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Assign (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccIndex (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Add,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call ("print",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "set_element";
           formals =
           [(Ast.TypI, "i"); ((Ast.TypA (Ast.TypI, None)), "a");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccIndex (
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 },
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "i"); 
                                            id = 0 });
                                       id = 0 }
                                     ));
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "n"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "b"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "set_element",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                 id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 });
                                                                  id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                  id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 10))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0); id = 0 }
                                      ));
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.AccIndex (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "a");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 4
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "leftRotate";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "d");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "d");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call (
                                                             "leftRotatebyOne",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 });
                                                                id = 0 };
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n");
                                                                    id = 0 });
                                                                 id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "leftRotatebyOne";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "temp"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "arr");
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Sub,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "n");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 });
                                         id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "temp"); 
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 7))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 6); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("leftRotate",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 2); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "reverseArray";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "start");
             (Ast.TypI, "end")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "start"); 
                                        id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "end"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "temp");
                                                   id = 0 },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "arr");
                                                             id = 0 },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "start");
                                                                  id = 0 });
                                                             id = 0 }
                                                           ));
                                                        id = 0 });
                                                   id = 0 }
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccIndex (
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "arr");
                                                              id = 0 },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Access
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccVar
                                                                    "end");
                                                                   id = 0 });
                                                              id = 0 }
                                                            ));
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "temp");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "start");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "end");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "size");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 6);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("reverseArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.BinaryOp (Ast.Sub,
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "n");
                                                id = 0 });
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 20))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "f"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "f"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "a");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "f");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "f");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Mult,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "f");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printarr",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "n"); id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "a"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printarr";
            formals = [(Ast.TypI, "len"); ((Ast.TypA (Ast.TypI, None)), "a")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "len"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccIndex (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "a");
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 }
                                                    ]
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fib"; formals = [(Ast.TypI, "x")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "x"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node = (Ast.ILiteral 2); id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 2);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 }
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("fib",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 0); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 2); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 4); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 5); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 5);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 39); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fun";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("fun",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Assign (
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 }
                                        ));
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Assign (
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "i"); id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Add,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printem";
           formals =
           [(Ast.TypI, "a"); (Ast.TypI, "b"); (Ast.TypI, "c");
             (Ast.TypI, "d")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "d"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("printem",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 17); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 192); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 8); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "gcd";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.While (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Equal,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "b"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.If (
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Greater,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 });
                                                  id = 0 }
                                                ));
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                  ]);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("gcd",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 14); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 15); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 99); 
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 121); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 6
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")); id = 0 };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "b")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printa"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printb"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "incab"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "b"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 21); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("incab", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "i")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Add,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 }
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 8); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Assign (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "p"); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Add,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccDeref
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "p");
                                                                 id = 0 });
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 });
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Return
                                             (Some { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i");
                                                          id = 0 });
                                                     id = 0 }));
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "insertionSort";
           formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 1); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Geq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Greater,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 12); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 11); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 13); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("insertionSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "x"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "y"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 17); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 25); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 39); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 3); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Mult,
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 3);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 4); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "a"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Assign (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccIndex (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Add,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call ("print",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "set_element";
           formals =
           [(Ast.TypI, "i"); ((Ast.TypA (Ast.TypI, None)), "a");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccIndex (
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 },
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "i"); 
                                            id = 0 });
                                       id = 0 }
                                     ));
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "n"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "b"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "set_element",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                 id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 });
                                                                  id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                  id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 10))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0); id = 0 }
                                      ));
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.AccIndex (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "a");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 4
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "leftRotate";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "d");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "d");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call (
                                                             "leftRotatebyOne",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 });
                                                                id = 0 };
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n");
                                                                    id = 0 });
                                                                 id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "leftRotatebyOne";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "temp"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "arr");
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Sub,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "n");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 });
                                         id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "temp"); 
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 7))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 6); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("leftRotate",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 2); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "reverseArray";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "start");
             (Ast.TypI, "end")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "start"); 
                                        id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "end"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "temp");
                                                   id = 0 },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "arr");
                                                             id = 0 },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "start");
                                                                  id = 0 });
                                                             id = 0 }
                                                           ));
                                                        id = 0 });
                                                   id = 0 }
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccIndex (
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "arr");
                                                              id = 0 },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Access
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccVar
                                                                    "end");
                                                                   id = 0 });
                                                              id = 0 }
                                                            ));
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "temp");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "start");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "end");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "size");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 6);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("reverseArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.BinaryOp (Ast.Sub,
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "n");
                                                id = 0 });
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "binarySearch";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "low");
             (Ast.TypI, "high"); (Ast.TypI, "key")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "high"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "low"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node =
                                        (Ast.UnaryOp (Ast.Neg,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 }
                                           ));
                                        id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "mid"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "mid"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Div,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "low");
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "high");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr");
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "mid");
                                              id = 0 });
                                         id = 0 }));
                              id = 0 },
                            { Ast.loc = <opaque>; node = (Ast.Block []);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr");
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("binarySearch",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "arr");
                                                    id = 0 });
                                               id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Add,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "mid");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "high");
                                                     id = 0 });
                                                id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "key");
                                                     id = 0 });
                                                id = 0 }
                                              ]
                                            ));
                                         id = 0 }));
                              id = 0 },
                            { Ast.loc = <opaque>; node = (Ast.Block []);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("binarySearch",
                                       [{ Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "arr");
                                               id = 0 });
                                          id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "low");
                                                id = 0 });
                                           id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Sub,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "mid");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "key");
                                                id = 0 });
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 8); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 9); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "key"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("binarySearch",
                                        [{ Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "arr");
                                                id = 0 });
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 0); 
                                            id = 0 };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "n");
                                                 id = 0 });
                                            id = 0 };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "key");
                                                 id = 0 });
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printLeaders";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "size");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Dec (
                                                              Ast.TypI, "j"));
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Less,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.UnaryOp (
                                                                    Ast.Not,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Leq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []);
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.If (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Equal,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 16); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printLeaders",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 20))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "f"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "f"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "a");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "f");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "f");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Mult,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "f");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printarr",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "n"); id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "a"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printarr";
            formals = [(Ast.TypI, "len"); ((Ast.TypA (Ast.TypI, None)), "a")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "len"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccIndex (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "a");
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 }
                                                    ]
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fib"; formals = [(Ast.TypI, "x")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "x"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node = (Ast.ILiteral 2); id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 2);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 }
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("fib",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 0); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 2); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 4); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 5); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 5);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 39); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fun";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("fun",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Assign (
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 }
                                        ));
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Assign (
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "i"); id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Add,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printem";
           formals =
           [(Ast.TypI, "a"); (Ast.TypI, "b"); (Ast.TypI, "c");
             (Ast.TypI, "d")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "d"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("printem",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 17); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 192); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 8); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "gcd";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.While (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Equal,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "b"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.If (
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Greater,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 });
                                                  id = 0 }
                                                ));
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                  ]);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("gcd",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 14); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 15); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 99); 
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 121); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 6
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")); id = 0 };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "b")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printa"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printb"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "incab"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "b"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 21); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("incab", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "i")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Add,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 }
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 8); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Assign (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "p"); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Add,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccDeref
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "p");
                                                                 id = 0 });
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 });
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Return
                                             (Some { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i");
                                                          id = 0 });
                                                     id = 0 }));
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "insertionSort";
           formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 1); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Geq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Greater,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 12); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 11); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 13); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("insertionSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "x"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "y"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 17); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 25); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 39); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 3); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Mult,
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 3);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 4); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "a"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Assign (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccIndex (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Add,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call ("print",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "set_element";
           formals =
           [(Ast.TypI, "i"); ((Ast.TypA (Ast.TypI, None)), "a");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccIndex (
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 },
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "i"); 
                                            id = 0 });
                                       id = 0 }
                                     ));
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "n"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "b"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "set_element",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                 id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 });
                                                                  id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                  id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 10))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0); id = 0 }
                                      ));
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.AccIndex (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "a");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 4
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "leftRotate";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "d");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "d");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call (
                                                             "leftRotatebyOne",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 });
                                                                id = 0 };
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n");
                                                                    id = 0 });
                                                                 id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "leftRotatebyOne";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "temp"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "arr");
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Sub,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "n");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 });
                                         id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "temp"); 
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 7))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 6); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("leftRotate",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 2); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "reverseArray";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "start");
             (Ast.TypI, "end")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "start"); 
                                        id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "end"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "temp");
                                                   id = 0 },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "arr");
                                                             id = 0 },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "start");
                                                                  id = 0 });
                                                             id = 0 }
                                                           ));
                                                        id = 0 });
                                                   id = 0 }
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccIndex (
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "arr");
                                                              id = 0 },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Access
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccVar
                                                                    "end");
                                                                   id = 0 });
                                                              id = 0 }
                                                            ));
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "temp");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "start");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "end");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "size");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 6);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("reverseArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.BinaryOp (Ast.Sub,
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "n");
                                                id = 0 });
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "binarySearch";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "low");
             (Ast.TypI, "high"); (Ast.TypI, "key")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "high"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "low"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node =
                                        (Ast.UnaryOp (Ast.Neg,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 }
                                           ));
                                        id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "mid"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "mid"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Div,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "low");
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "high");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr");
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "mid");
                                              id = 0 });
                                         id = 0 }));
                              id = 0 },
                            { Ast.loc = <opaque>; node = (Ast.Block []);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr");
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("binarySearch",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "arr");
                                                    id = 0 });
                                               id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Add,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "mid");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "high");
                                                     id = 0 });
                                                id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "key");
                                                     id = 0 });
                                                id = 0 }
                                              ]
                                            ));
                                         id = 0 }));
                              id = 0 },
                            { Ast.loc = <opaque>; node = (Ast.Block []);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("binarySearch",
                                       [{ Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "arr");
                                               id = 0 });
                                          id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "low");
                                                id = 0 });
                                           id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Sub,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "mid");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "key");
                                                id = 0 });
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 8); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 9); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "key"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("binarySearch",
                                        [{ Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "arr");
                                                id = 0 });
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 0); 
                                            id = 0 };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "n");
                                                 id = 0 });
                                            id = 0 };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "key");
                                                 id = 0 });
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printLeaders";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "size");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Dec (
                                                              Ast.TypI, "j"));
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Less,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.UnaryOp (
                                                                    Ast.Not,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Leq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []);
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.If (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Equal,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 16); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printLeaders",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 20))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "f"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "f"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "a");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "f");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "f");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Mult,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "f");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printarr",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "n"); id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "a"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printarr";
            formals = [(Ast.TypI, "len"); ((Ast.TypA (Ast.TypI, None)), "a")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "len"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccIndex (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "a");
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 }
                                                    ]
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fib"; formals = [(Ast.TypI, "x")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "x"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node = (Ast.ILiteral 2); id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 2);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 }
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("fib",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 0); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 2); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 4); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 5); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 5);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 39); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fun";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("fun",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Assign (
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 }
                                        ));
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Assign (
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "i"); id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Add,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printem";
           formals =
           [(Ast.TypI, "a"); (Ast.TypI, "b"); (Ast.TypI, "c");
             (Ast.TypI, "d")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "d"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("printem",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 17); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 192); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 8); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "gcd";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.While (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Equal,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "b"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.If (
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Greater,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 });
                                                  id = 0 }
                                                ));
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                  ]);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("gcd",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 14); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 15); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 99); 
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 121); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 6
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")); id = 0 };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "b")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printa"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printb"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "incab"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "b"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 21); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("incab", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "i")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Add,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 }
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 8); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Assign (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "p"); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Add,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccDeref
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "p");
                                                                 id = 0 });
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 });
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Return
                                             (Some { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i");
                                                          id = 0 });
                                                     id = 0 }));
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "insertionSort";
           formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 1); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Geq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Greater,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 12); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 11); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 13); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("insertionSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "x"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "y"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 17); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 25); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 39); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 3); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Mult,
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 3);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 4); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "a"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Assign (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccIndex (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Add,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call ("print",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "set_element";
           formals =
           [(Ast.TypI, "i"); ((Ast.TypA (Ast.TypI, None)), "a");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccIndex (
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 },
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "i"); 
                                            id = 0 });
                                       id = 0 }
                                     ));
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "n"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "b"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "set_element",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                 id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 });
                                                                  id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                  id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 10))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0); id = 0 }
                                      ));
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.AccIndex (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "a");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 4
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "leftRotate";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "d");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "d");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call (
                                                             "leftRotatebyOne",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 });
                                                                id = 0 };
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n");
                                                                    id = 0 });
                                                                 id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "leftRotatebyOne";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "temp"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "arr");
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Sub,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "n");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 });
                                         id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "temp"); 
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 7))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 6); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("leftRotate",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 2); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "reverseArray";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "start");
             (Ast.TypI, "end")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "start"); 
                                        id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "end"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "temp");
                                                   id = 0 },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "arr");
                                                             id = 0 },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "start");
                                                                  id = 0 });
                                                             id = 0 }
                                                           ));
                                                        id = 0 });
                                                   id = 0 }
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccIndex (
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "arr");
                                                              id = 0 },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Access
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccVar
                                                                    "end");
                                                                   id = 0 });
                                                              id = 0 }
                                                            ));
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "temp");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "start");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "end");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "size");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 6);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("reverseArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.BinaryOp (Ast.Sub,
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "n");
                                                id = 0 });
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "binarySearch";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "low");
             (Ast.TypI, "high"); (Ast.TypI, "key")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "high"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "low"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node =
                                        (Ast.UnaryOp (Ast.Neg,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 }
                                           ));
                                        id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "mid"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "mid"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Div,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "low");
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "high");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr");
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "mid");
                                              id = 0 });
                                         id = 0 }));
                              id = 0 },
                            { Ast.loc = <opaque>; node = (Ast.Block []);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr");
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("binarySearch",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "arr");
                                                    id = 0 });
                                               id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Add,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "mid");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "high");
                                                     id = 0 });
                                                id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "key");
                                                     id = 0 });
                                                id = 0 }
                                              ]
                                            ));
                                         id = 0 }));
                              id = 0 },
                            { Ast.loc = <opaque>; node = (Ast.Block []);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("binarySearch",
                                       [{ Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "arr");
                                               id = 0 });
                                          id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "low");
                                                id = 0 });
                                           id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Sub,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "mid");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "key");
                                                id = 0 });
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 8); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 9); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "key"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("binarySearch",
                                        [{ Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "arr");
                                                id = 0 });
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 0); 
                                            id = 0 };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "n");
                                                 id = 0 });
                                            id = 0 };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "key");
                                                 id = 0 });
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printLeaders";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "size");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Dec (
                                                              Ast.TypI, "j"));
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Less,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.UnaryOp (
                                                                    Ast.Not,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Leq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []);
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.If (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Equal,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 16); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printLeaders",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 20))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "f"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "f"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "a");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "f");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "f");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Mult,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "f");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printarr",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "n"); id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "a"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printarr";
            formals = [(Ast.TypI, "len"); ((Ast.TypA (Ast.TypI, None)), "a")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "len"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccIndex (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "a");
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 }
                                                    ]
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fib"; formals = [(Ast.TypI, "x")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "x"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node = (Ast.ILiteral 2); id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 2);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 }
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("fib",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 0); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 2); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 4); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 5); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 5);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 39); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fun";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("fun",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Assign (
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 }
                                        ));
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Assign (
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "i"); id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Add,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printem";
           formals =
           [(Ast.TypI, "a"); (Ast.TypI, "b"); (Ast.TypI, "c");
             (Ast.TypI, "d")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "d"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("printem",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 17); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 192); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 8); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "gcd";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.While (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Equal,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "b"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.If (
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Greater,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 });
                                                  id = 0 }
                                                ));
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                  ]);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("gcd",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 14); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 15); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 99); 
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 121); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 6
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")); id = 0 };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "b")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printa"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printb"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "incab"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "b"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 21); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("incab", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "i")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Add,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 }
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 8); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Assign (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "p"); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Add,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccDeref
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "p");
                                                                 id = 0 });
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 });
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Return
                                             (Some { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i");
                                                          id = 0 });
                                                     id = 0 }));
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "insertionSort";
           formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 1); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Geq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Greater,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 12); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 11); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 13); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("insertionSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "x"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "y"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 17); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 25); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 39); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 3); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Mult,
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2);
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 3);
                                                  id = 0 }
                                                ));
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 4); id = 0 }
                                      ));
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "a"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Assign (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccIndex (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Add,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                  ));
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call ("print",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "set_element";
           formals =
           [(Ast.TypI, "i"); ((Ast.TypA (Ast.TypI, None)), "a");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccIndex (
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 },
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "i"); 
                                            id = 0 });
                                       id = 0 }
                                     ));
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "n"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "b"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "set_element",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                 id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 });
                                                                  id = 0 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                  id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 10))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0); id = 0 }
                                      ));
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.AccIndex (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "a");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 4
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "leftRotate";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "d");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "d");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call (
                                                             "leftRotatebyOne",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 });
                                                                id = 0 };
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n");
                                                                    id = 0 });
                                                                 id = 0 }
                                                               ]
                                                             ));
                                                          id = 0 });
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "leftRotatebyOne";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "temp"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "arr");
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Sub,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "n");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 });
                                         id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "temp"); 
                                         id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 7))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 6); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("leftRotate",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 2); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "reverseArray";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "start");
             (Ast.TypI, "end")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "start"); 
                                        id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "end"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "temp");
                                                   id = 0 },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "arr");
                                                             id = 0 },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "start");
                                                                  id = 0 });
                                                             id = 0 }
                                                           ));
                                                        id = 0 });
                                                   id = 0 }
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccIndex (
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "arr");
                                                              id = 0 },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Access
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccVar
                                                                    "end");
                                                                   id = 0 });
                                                              id = 0 }
                                                            ));
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "temp");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "start");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "end");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "size");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 6);
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("reverseArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0); id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.BinaryOp (Ast.Sub,
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "n");
                                                id = 0 });
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "binarySearch";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "low");
             (Ast.TypI, "high"); (Ast.TypI, "key")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "high"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "low"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node =
                                        (Ast.UnaryOp (Ast.Neg,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1); 
                                             id = 0 }
                                           ));
                                        id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "mid"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "mid"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Div,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "low");
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "high");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr");
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "mid");
                                              id = 0 });
                                         id = 0 }));
                              id = 0 },
                            { Ast.loc = <opaque>; node = (Ast.Block []);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr");
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid");
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("binarySearch",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "arr");
                                                    id = 0 });
                                               id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Add,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "mid");
                                                          id = 0 });
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1);
                                                     id = 0 }
                                                   ));
                                                id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "high");
                                                     id = 0 });
                                                id = 0 };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "key");
                                                     id = 0 });
                                                id = 0 }
                                              ]
                                            ));
                                         id = 0 }));
                              id = 0 },
                            { Ast.loc = <opaque>; node = (Ast.Block []);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("binarySearch",
                                       [{ Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "arr");
                                               id = 0 });
                                          id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "low");
                                                id = 0 });
                                           id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Sub,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "mid");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "key");
                                                id = 0 });
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 8); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 9); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "key"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("binarySearch",
                                        [{ Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "arr");
                                                id = 0 });
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 0); 
                                            id = 0 };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "n");
                                                 id = 0 });
                                            id = 0 };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "key");
                                                 id = 0 });
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printLeaders";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "size");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Dec (
                                                              Ast.TypI, "j"));
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Less,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.UnaryOp (
                                                                    Ast.Not,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Leq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []);
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.If (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Equal,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 16); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printLeaders",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1);
                                                         id = 0 }
                                                       ));
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 20))), "a")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "f"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "f"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n"));
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "a");
                                                         id = 0 },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i");
                                                              id = 0 });
                                                         id = 0 }
                                                       ));
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "f");
                                                         id = 0 });
                                                    id = 0 }
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "f");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Mult,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "f");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printarr",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "n"); id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "a"); id = 0 });
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printarr";
            formals = [(Ast.TypI, "len"); ((Ast.TypA (Ast.TypI, None)), "a")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "len"); id = 0 });
                                    id = 0 }
                                  ));
                               id = 0 },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccIndex (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "a");
                                                               id = 0 },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                               id = 0 }
                                                             ));
                                                          id = 0 });
                                                     id = 0 }
                                                    ]
                                                  ));
                                               id = 0 });
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i");
                                                               id = 0 });
                                                          id = 0 },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1);
                                                          id = 0 }
                                                        ));
                                                     id = 0 }
                                                   ));
                                                id = 0 });
                                           id = 0 });
                                      id = 0 }
                                    ]);
                               id = 0 }
                             ));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fib"; formals = [(Ast.TypI, "x")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "x"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node = (Ast.ILiteral 2); id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }));
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x");
                                                         id = 0 });
                                                    id = 0 },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 2);
                                                    id = 0 }
                                                  ));
                                               id = 0 }
                                              ]
                                            ));
                                         id = 0 }
                                       ));
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("fib",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 0); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 2); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 4); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 5); id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 5);
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }]
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b"); 
                                             id = 0 });
                                        id = 0 }
                                      ));
                                   id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 39); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fun";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }));
                        id = 0 });
                   id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("fun",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Assign (
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 }
                                        ));
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Assign (
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "i"); id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Add,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1);
                                                id = 0 }
                                              ));
                                           id = 0 }
                                         ));
                                      id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i"); id = 0 });
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printem";
           formals =
           [(Ast.TypI, "a"); (Ast.TypI, "b"); (Ast.TypI, "c");
             (Ast.TypI, "d")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a"); id = 0 });
                                   id = 0 }
                                  ]
                                ));
                             id = 0 });
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "d"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("printem",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 17); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 192); id = 0 };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 8); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "gcd";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.While (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Equal,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a"); id = 0 });
                                  id = 0 },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "b"); id = 0 });
                                  id = 0 }
                                ));
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.If (
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Greater,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 });
                                                  id = 0 },
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 });
                                                  id = 0 }
                                                ));
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b");
                                                       id = 0 },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b");
                                                                 id = 0 });
                                                            id = 0 },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a");
                                                                 id = 0 });
                                                            id = 0 }
                                                          ));
                                                       id = 0 }
                                                     ));
                                                  id = 0 });
                                             id = 0 }
                                           ));
                                        id = 0 });
                                   id = 0 }
                                  ]);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("gcd",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2); id = 0 };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 14); 
                                           id = 0 }
                                         ]
                                       ));
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3); id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 15); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 99); 
                                           id = 0 };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 121); 
                                            id = 0 }
                                          ]
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 6
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")); id = 0 };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "b")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printa"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printb"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "incab"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a"); 
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "b"); 
                                              id = 0 });
                                         id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 21); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("incab", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])); id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 2
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "i")); id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i"); id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Add,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 });
                                          id = 0 }
                                        ));
                                     id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>; node = (Ast.Block []);
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>; node = (Ast.BLiteral true);
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 8); id = 0 }
                                       ]
                                     ));
                                  id = 0 });
                             id = 0 }
                           ));
                        id = 0 });
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17); id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")); id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "p"); 
                                             id = 0 });
                                        id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.AccDeref
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "p");
                                                       id = 0 });
                                                  id = 0 });
                                             id = 0 });
                                        id = 0 },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2); id = 0 }
                                      ));
                                   id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p");
                                                   id = 0 });
                                              id = 0 });
                                         id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0); id = 0 }));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }
                                   ]
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 1
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i"); id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0); id = 0 }
                                 ));
                              id = 0 });
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i"); id = 0 });
                                   id = 0 },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2); id = 0 }
                                 ));
                              id = 0 },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i");
                                                         id = 0 });
                                                    id = 0 }
                                                   ]
                                                 ));
                                              id = 0 });
                                         id = 0 });
                                    id = 0 };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Return
                                             (Some { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i");
                                                          id = 0 });
                                                     id = 0 }));
                                          id = 0 });
                                     id = 0 }
                                   ]);
                              id = 0 }
                            ));
                         id = 0 });
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i"); id = 0 });
                                    id = 0 }));
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 }
     ])
Number of found declarations: 3
Ast dump
 (Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "insertionSort";
           formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                   id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key"));
                    id = 0 };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j"));
                    id = 0 };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i"); 
                                              id = 0 },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 1); 
                                              id = 0 }
                                            ));
                                         id = 0 });
                                    id = 0 });
                               id = 0 };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i");
                                                    id = 0 });
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n");
                                                    id = 0 });
                                               id = 0 }
                                             ));
                                          id = 0 },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                id = 0 });
                                                           id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Geq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Greater,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                    id = 0 });
                                                                    id = 0 }]);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 });
                                                            id = 0 };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 });
                                                            id = 0 }
                                                          ]);
                                                     id = 0 });
                                                id = 0 };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i");
                                                                id = 0 },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                   ));
                                                                id = 0 }
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 }
                                               ]);
                                          id = 0 }
                                        ));
                                     id = 0 });
                                id = 0 }
                              ]);
                         id = 0 });
                    id = 0 }
                  ]);
             id = 0 }
           });
      id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i");
                                               id = 0 },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0);
                                               id = 0 }
                                             ));
                                          id = 0 });
                                     id = 0 });
                                id = 0 };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i");
                                                     id = 0 });
                                                id = 0 },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n");
                                                     id = 0 });
                                                id = 0 }
                                              ));
                                           id = 0 },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr");
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 }
                                                                    ));
                                                                    id = 0 });
                                                                 id = 0 }
                                                                ]
                                                              ));
                                                           id = 0 });
                                                      id = 0 });
                                                 id = 0 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i");
                                                                 id = 0 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i");
                                                                    id = 0 });
                                                                    id = 0 },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1);
                                                                    id = 0 }
                                                                    ));
                                                                 id = 0 }
                                                               ));
                                                            id = 0 });
                                                       id = 0 });
                                                  id = 0 }
                                                ]);
                                           id = 0 }
                                         ));
                                      id = 0 });
                                 id = 0 }
                               ]);
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "arr"));
                    id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 12); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 11); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 13); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr"); id = 0 },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4); id = 0 }
                                       ));
                                    id = 0 },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6); id = 0 }
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("insertionSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr"); 
                                          id = 0 });
                                     id = 0 };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5); id = 0 }
                                    ]
                                  ));
                               id = 0 });
                          id = 0 });
                     id = 0 };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0); id = 0 }));
                          id = 0 });
                     id = 0 }
                   ]);
              id = 0 }
            });
       id = 0 }
     ])
